//===========================================================================
// rAthenaCN 地图服务器配置文件 [ www.rAthenaCN.com ]
//===========================================================================
// 提示: 此配置文件中, 只要是以//作为开头的行, 都是注释信息. 
// 注释信息您可以随意修改, 都不会干扰服务器的正常运行. 
//===========================================================================
// GIT 代码库 -> https://github.com/rAthenaCN/rAthenaCN.git
//===========================================================================
// 问题反馈 -> https://github.com/rAthenaCN/rAthenaCN/issues
//===========================================================================

//===========================================================================
// 登录服务器、角色服务器、地图服务器之间的内部通讯账号和密码
//===========================================================================

userid: rA_s1
passwd: rA_p1

//===========================================================================
// 角色服务器的IP地址
// 地图服务器会依赖这个IP地址去和角色服务器建立连接. 
// 注意: 这个选项一般用于您的程序运行于防火墙后面, 
//       或者您的机器有多张网卡的时候比较有用. 
// 提醒: 若您想启用char_ip选项的话, 记得去掉char_ip前面的注释符//, 否则
//       服务器会忽略它, 导致配了和没配一样. 
//===========================================================================

char_ip: 127.0.0.1

//===========================================================================
// 地图服务器会监听来自这个IP地址的网卡信息
// 注意: 该选项允许你在有多个公网网卡(也意味着有多个公网IP)的机器上, 
//       使用相同的“地图服务器端口”来开多个服. 
// 提醒: 若您想启用bind_ip选项的话, 记得去掉bind_ip前面的注释符//, 否则
//       服务器会忽略它, 导致配了和没配一样. 
//===========================================================================

//bind_ip: 127.0.0.1

//===========================================================================
// 角色服务器的端口, 方便地图服务器和角色服务器建立连接
//===========================================================================

char_port: 6121

//===========================================================================
// 地图服务器的IP地址
// 客户端将会使用这里配置的IP地址来和地图服务器建立连接. 
// 若您想对外开服(而不是开单机服)的话, 请把您的公网IP地址设置到这里. 
// 提醒: 若您想启用map_ip选项的话, 记得去掉map_ip前面的注释符//, 否则
//       服务器会忽略它, 导致配了和没配一样. 
//===========================================================================

map_ip: 127.0.0.1

//===========================================================================
// 地图服务器端口
//===========================================================================

map_port: 5121

//===========================================================================
// 往控制台窗口(俗称:黑框)中输出内容时, 在每行信息的前面加上时间戳. 
// 最大长度不能超过20个字符. 
// 常用的格式有:
//   %I:%M:%S %p (小时:分钟:秒数 12小时制, 会携带AM或PM标记)
//   %H:%M:%S (小时:分钟:秒数, 24小时制)
//   %d/%b/%Y (日期/月份/年份)
// 更多的格式信息, 请参考C语言的strftime函数用法. 
// 
// rAthena官方默认值是 [%d/%b %H:%M] 也就是24小时制的 [日/月 时:分]
// 不过这明显不符合国人习惯, 为此rAthenaCN将其默认值改成了 [%Y/%m/%d %H:%M] 
// 
// 若想启用时间戳的话, 请将下面这一行头部的注释符//去掉
//===========================================================================

//timestamp_format: [%Y/%m/%d %H:%M] 

//===========================================================================
// 当终端被一些加载器打开从而导致输出信息被重定向时, 
// 是否也将颜色代码一同输出? 
// 
// 问: 什么是重定向? 
// 答: 原本地图服务器的信息将直接显示到自己的黑框, 不过若使用一些启动工具
//     来启动地图服务器的话, 原本应该显示到黑框的信息被显示到了启动工具里面的
//     一个列表之类, 这种情况称之为“输出信息被重定向了”! 
// 
// 问: 什么是颜色代码? 
// 答: 在我们使用黑框的过程中, 会发现类似[Status]的字是绿色的, 
//     而[Error]是红色的. 这是因为在程序往黑框输出信息时, 加入了一些
//     颜色编码, 比如若使用颜色编码“\033[1;31m”那么则表示接下来的字用红色输出
//     其实有点类似我们脚本中使用的^xxxxxx颜色代码. 
// 
// 此选项一般情况下推荐关闭
//===========================================================================

stdout_with_ansisequence: no

//===========================================================================
// 记录地图服务器黑框中产生的部分信息到/log/目录中
// 首先您要确保rAthena的目录中有一个log文件夹, 没有的话必须手动创建, 
// 否则日志文件将不会产生. 
// 1: 记录黑框中以  [Warning] 开头的警告信息
// 2: 记录黑框中以  [Error]   开头的错误信息和数据库错误信息
// 4: 记录黑框中以  [Debug]   开头的调试信息
// 例如: 想要记录[Warning]、[Error]、[Debug]开头的信息, 
//       只需要将1、2、4相加, 将 console_msg_log 设置为7即可(1+2+4=7)! 
// 
// 日志信息的记录, 并不会被 console_silent 选项影响
// 也就是说, 假如 console_msg_log 设置为 2 想记录 [Error] 信息, 而
// 在 console_silent 中设置为 16 想隐藏 [Error] 信息, 此时系统
// 将会隐藏[Error]信息, 与此同时记录[Error]信息
//===========================================================================

console_msg_log: 0

//===========================================================================
// 将地图服务器黑框中产生的要记录的信息, 写到下面指定的日志文件中
//===========================================================================

console_log_filepath: ./log/map-msg_log.log

//===========================================================================
// 选择性隐藏地图服务器黑框中显示出来的一些提示信息: 
// 1:  隐藏黑框中以  [Info]    开头的提示信息
// 2:  隐藏黑框中以  [Status]  开头的状态信息
// 4:  隐藏黑框中以  [Notice]  开头的注意信息
// 8:  隐藏黑框中以  [Warning] 开头的警告信息
// 16: 隐藏黑框中以  [Error]   开头的错误信息和数据库错误信息
// 32: 隐藏黑框中以  [Debug]   开头的调试信息
// 若您想同时隐藏多种信息, 只需要将其对应的数字相加即可
// 例如: 若您想要隐藏[Info]、[Status]、[Notice]开头的信息, 
//       那么只需要将1、2、4相加, 填写7即可(1+2+4=7)! 
//===========================================================================

console_silent: 0

//===========================================================================
// 地图服务器将去哪个目录下读取数据文件? 
//===========================================================================

db_path: db

//===========================================================================
// 是否启用 @guildspy 和 @partyspy 指令? 
// 注意: 启用这两个指令会降低封包的发送性能, 请酌情处理
//===========================================================================

enable_spy: no

//===========================================================================
// 是否从grf-files.txt所配置的GRF文件或者data目录中
// 读取地图数据(例如: Gat文件和Rsw文件), 而不是从地图缓存文件中读取? 
// 
// 问: 地图缓存文件的位置是? 
// 答: 复兴前在db\pre-re\map_cache.dat 复兴后在 db\re\map_cache.dat
//===========================================================================

use_grf: no

//===========================================================================
// 是否启用终端指令
// 开启终端指令后, 您可以在map-server的黑框中输入命令
// 在地图服务器的黑框中输入help然后回车, 可以查看终端指令说明
// 比如输入admin:@reloadscrpit可以在不登录GM账号的情况下, 让地图服务器重载所有脚本
// 想要启用这个功能的话, 请将下面的值改成on即可
// 请避免在地图服务器中使用 >& 日志文件.log 这样的输出指令
//===========================================================================

console: off

//===========================================================================
// 每轮自动存档的时间间隔
// 在线的玩家数据都会在设定的时间(以秒为单位)内被自动存档
// 注意: 当你设定为300秒保存一轮的情况下, 如果有300个玩家在线, 
//       那么每秒钟会保存1个玩家的数据. 
//===========================================================================

autosave_time: 300

//===========================================================================
// 最小存档间隔(以毫秒为单位)
// 防止一个角色在短时间内被频繁存档, 降低在线人数非常多时角色服务器的存档压力
//===========================================================================

minsave_time: 100

//===========================================================================
// 下面是和 autosave_time 相关的一部分设置, 除了每轮自动存档之外, 
// 当玩家进行下列操作之后, 也会被立刻存档: 
// 1:   和玩家交易成功
// 2:   成功开启露天商店/露天商店有东西卖出
// 4:   关闭个人仓库/公会仓库
// 8:   宠物被孵化/变回蛋状态
// 16:  成功发送一封带有附件的邮件
// 32:  成功在拍卖行提交一个物品
// 64:  接到/删除/完成一个任务
// 128: 完成随身银行的存钱/取钱操作
// 256: After every attendance reward
// 4095: Always
// 提示: 此选项可以在一些经常崩溃的服务端上, 起到很重要的作用. 通过增加一些
//       关键的保存时机, 来避免玩家的数据丢失. 不过若您的服务端程序很少崩溃
//       那么可以关闭此选项(配置为0), 来降低内部服务器的通讯延迟. 
//===========================================================================

save_settings: 4095

//===========================================================================
// 聊天栏公告信息配置文件的路径, 当角色登入游戏后, 里面的信息会显示在聊天栏
//===========================================================================

motd_txt: conf/motd.txt

//===========================================================================
// 当一个GM使用 @help 或 @h 指令时, 会从下面的配置文件中加载相关的指令说明
//===========================================================================

charhelp_txt: conf/charhelp.txt

//===========================================================================
// Load channel config from
//===========================================================================

channel_conf: conf/channels.conf

//===========================================================================
// 地图相关的配置文件
// 在很久很久以前, 并没有 maps_athena.conf 这个配置文件
// 那时候用来决定map-server会加载什么地图, 都是直接写在这个文件的底部
// 不过后来由于地图是在太多了, 也拥有了配置文件的import机制
// 所以就将map-server会加载什么地图的配置, 单独放到了 maps_athena.conf 里面
//===========================================================================

import: conf/maps_athena.conf

import: conf/import/map_conf.txt
